
//virtual function overidding
#include<iostream>
using namespace std;

class base
{
  public:
   virtual int func()                      //this function is virtual 
  {
    cout<<"func of base"<<endl;
  }
};

class derived:public base
{
   public:
   int func()
   {
    cout<<"func of derived"<<endl;
   }
};

int main()
{                              //here function call is based on object not pointer here function of derived is called as it is object
    base *p;                  //when base class pointer pointing to derived class object it is supose to give 
    p=new derived();          //function of base but as it made virtual it will give function of derived
    p->func();           
    return 0;
}

